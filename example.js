import { RoraimaAI, RoraimaAIError } from './index.mjs';

// Ejemplo b√°sico de uso del SDK
async function ejemploBasico() {
  // Configura tu API key aqu√≠
  const API_KEY = 'sk-tu_api_key_aqui';
  
  if (API_KEY === 'sk-tu_api_key_aqui') {
    console.log('‚ùå Por favor configura tu API key en el archivo example.js');
    return;
  }
  
  const ai = new RoraimaAI(API_KEY);
  
  console.log('üöÄ Iniciando ejemplos del SDK Roraima AI...\n');
  
  try {
    // 1. Verificar estado del servicio
    console.log('üìä Verificando estado del servicio...');
    const health = await ai.getHealth();
    console.log('‚úÖ Estado:', health.status);
    
    // 2. Obtener informaci√≥n del usuario
    console.log('\nüë§ Obteniendo informaci√≥n del usuario...');
    const info = await ai.getInfo();
    console.log('‚úÖ Usuario:', info.user.name);
    console.log('‚úÖ Saldo disponible: $', info.user.balance.toFixed(4));
    
    // 3. Procesar texto simple
    console.log('\nüí¨ Procesando texto...');
    const textResponse = await ai.processText('Expl√≠came en 2 l√≠neas qu√© es la inteligencia artificial');
    console.log('‚úÖ Respuesta:', textResponse.content);
    console.log('‚úÖ Costo:', textResponse.metrics?.cost_estimate || 'N/A');
    
    // 4. Obtener estad√≠sticas
    console.log('\nüìà Obteniendo estad√≠sticas...');
    const stats = await ai.getStats('24h');
    console.log('‚úÖ Requests √∫ltimas 24h:', stats.summary.total_requests);
    console.log('‚úÖ Costo total 24h: $', stats.summary.total_cost.toFixed(6));
    
    // 5. Verificar saldo final
    console.log('\nüí∞ Saldo final...');
    const finalBalance = await ai.getBalance();
    console.log('‚úÖ Saldo actual: $', finalBalance.toFixed(4));
    
    console.log('\nüéâ ¬°Todos los ejemplos completados exitosamente!');
    
  } catch (error) {
    if (error instanceof RoraimaAIError) {
      console.error('‚ùå Error de API:', error.message);
      console.error('‚ùå C√≥digo de estado:', error.status);
      
      switch (error.status) {
        case 401:
          console.error('üí° Soluci√≥n: Verifica que tu API key sea correcta');
          break;
        case 402:
          console.error('üí° Soluci√≥n: Recarga tu cuenta con saldo');
          break;
        case 500:
          console.error('üí° Soluci√≥n: Intenta nuevamente en unos minutos');
          break;
      }
    } else {
      console.error('‚ùå Error general:', error.message);
    }
  }
}

// Ejemplo con imagen (requiere archivo de imagen)
// eslint-disable-next-line @typescript-eslint/no-unused-vars
async function ejemploConImagen() {
  const API_KEY = 'sk-tu_api_key_aqui';
  
  if (API_KEY === 'sk-tu_api_key_aqui') {
    console.log('‚ùå Por favor configura tu API key para usar este ejemplo');
    return;
  }
  
  const ai = new RoraimaAI(API_KEY);
  
  try {
    console.log('üñºÔ∏è Procesando imagen de ejemplo...');
    
    // Nota: necesitas tener un archivo de imagen llamado 'test.jpg' en el mismo directorio
    const response = await ai.processImage(
      'Describe brevemente lo que ves en esta imagen',
      './test.jpg'
    );
    
    console.log('‚úÖ Descripci√≥n:', response.content);
    console.log('‚úÖ Costo:', response.metrics?.cost_estimate || 'N/A');
    
    if (response.detections && response.detections.length > 0) {
      console.log('‚úÖ Objetos detectados:', response.detections.length);
    }
    
  } catch (error) {
    if (error.message.includes('no encontrado')) {
      console.log('üí° Para probar con im√°genes, coloca un archivo llamado "test.jpg" en este directorio');
    } else {
      console.error('‚ùå Error:', error.message);
    }
  }
}

// Ejecutar ejemplos
if (import.meta.url === `file://${process.argv[1]}`) {
  console.log('='.repeat(60));
  console.log('ü§ñ SDK Roraima AI - Ejemplos de Uso');
  console.log('='.repeat(60));
  
  ejemploBasico();
  
  // Descomentar para probar con imagen
  // ejemploConImagen();
} 